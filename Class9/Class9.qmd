---
title: "Class 9: Halloween Candy Mini-Project"
author: "Winnie Zhou (A16673200)"
format: pdf
---

In today's class we will examine some data about candy from the 538 website. 

## Importing Candy data
```{r}
candy_file <- "candy-data.csv"
candy <- read.csv(candy_file,row.names = 1)
head(candy)
```


## Data exploration
> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```
There are `r nrow(candy)` in this dataset

> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

## My favorite candy vs yours

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Werther's Original Caramel",]$winpercent
```


> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat",]$winpercent
```
> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```


```{r}
library("skimr")
skim(candy)
```
Shortcut for library
```{r}
skimr::skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

The "winpercent" variable looks to be on a 100% scale while the other variables look like they are on a 0-1 scale for the columns "mean" to "p100".

> Q7. What do you think a zero and one represent for the candy$chocolate column?

A zero would represent that it does not have what the column represents while a one means the it does have what the column represents (100%).

> Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent)
```
```{r}
library(ggplot2)
```
```{r}
ggplot(candy) +
  aes(winpercent) +
  geom_histogram(binds=7)
```


> Q9. Is the distribution of winpercent values symmetrical?
 
No. 

> Q10. Is the center of the distribution above or below 50%?

Below
```{r}
mean(candy$winpercent)
```
```{r}
summary(candy$winpercent)
```

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

- first find all chocolate candy
- find their winpercent values
- calculate the mean of these values
```{r}
chocolate.inds <- candy$chocolate==1
chocolate.win <- candy[chocolate.inds,]$winpercent
mean.choc <- mean(chocolate.win)
```

- then do the same for fruity candy and compare with the mean for chocolate candy
```{r}
fruity.inds <- candy$fruity==1
fruity.win <- candy[fruity.inds,]$winpercent
mean.fruity <- mean(fruity.win)
mean.choc > mean.fruity
```

> Q12. Is this difference statistically significant?

```{r}
t.test(chocolate.win, fruity.win)
```
p-value = 2.871e-08 is very small, so the difference is statistically significant.


> Q13. What are the five least liked candy types in this set?

```{r}
head(candy[order(candy$winpercent),], n=5)
```
```{r}
x <- c(5,6,3,1,7)
sort(x)
```

```{r}
x[order(x)]
```
The order function returns the indices that make the input sorted.

```{r}
inds <- order(candy$winpercent)
head(candy[inds,], 5)
```


> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
tail(candy[inds,], 5)
```


> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy)+
  aes(winpercent, rownames(candy))+
  geom_col()
```


> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
#/ fig-height: 10
#/ fig-width: 7

ggplot(candy)+
  aes(winpercent, reorder(rownames(candy),winpercent))+
  geom_col()
```

```{r}
ggsave("mybarplot.png", height=10)
```

![Exported image that is bigger so I can read it](mybarplot.png)


Add my custom colors to my barplot
```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "red"
my_cols[as.logical(candy$bar)] = "purple"
my_cols[as.logical(candy$fruity)] = "orange"
```

```{r}
#/ fig-height: 10
#/ fig-width: 7

ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols)
```

> Q17. What is the worst ranked chocolate candy?

Sixlets

> Q18. What is the best ranked fruity candy?

Starburst

Plot of winpercent vs pricepercent

```{r}
#/ fig-height: 10
#/ fig-width: 7

ggplot(candy) + 
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols)+
  geom_label(col=my_cols)
```

There are just too many labels in thisd above plot to be readable. We can use the `ggrepel` package to do a better job of placing labels so they minimize text overlap.

```{r}
library(ggrepel)

ggplot(candy) + 
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols)+
  geom_text_repel(col=my_cols, max.overlaps=8)
```



## 5 Exploring the correlation structure


```{r}
library(corrplot)

cij <- cor(candy)
cij
```
```{r}
corrplot(cij)
```
> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruity seem to be the most anti-correlate.

> Q23. Similarly, what two variables are most positively correlated?

Chocolate and winpercent are most positively correlated.

## 6. Principal component analysis

We will perform a PCA of the candy. Key-question: do we need to scale the data before PCA?

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

```{r}
plot(pca$x[,1], pca$x[,2], col=my_cols, pch=16)
```

Make a ggplot version of this figure:
```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
head(my_data)

ggplot(my_data) +
  aes(PC1, PC2,
      label=rownames(my_data)
      )+
  geom_point(col=my_cols)+
  geom_text_repel(col=my_cols, max.overlaps=6)
```


> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```
Least popular 

Make this a bit nicer
```{r}
ggplot(my_data) +
  aes(PC1, PC2,
      label=rownames(my_data),
      size=winpercent/100,
      text-rownames(my_data))+
  geom_point(col=my_cols)
```


```{r}
library(ggrepel)
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

```{r}
##library(plotly)
##ggplotly(p)
```

How do the original variable contribute of our PCs? FOr this we look at the loading component of our results object i.e. the "pca$rotation` object.

```{r}
head(pca$rotation)
```

Make a barplot with ggplot and order the bars by their value. Recall that you need a data.frame as input for ggplot

```{r}
res <- as.data.frame(pca$rotation)

ggplot(res) +
  aes(PC1, reorder(rownames(res), PC1)
      )+
  geom_col()
```


> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity, hard and pluribus are picked up strongly by PC1 in the positive direction. This makes sense based on the corelation structure in the dataset. Hard candies usually come in a bag or box of multiple candies and they tend to be fruity rather than chocolate.




